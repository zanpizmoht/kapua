# =======================
# Shiro INI configuration
# =======================

[main]
# Objects and their properties are defined here,
# Such as the securityManager, Realms and anything
# else needed to build the SecurityManager

#authenticator
authenticator = org.eclipse.kapua.service.authentication.shiro.KapuaAuthenticator
securityManager.authenticator = $authenticator

#
# Auth filters
# kapuaAuthcAccessToken = org.eclipse.kapua.app.api.auth.KapuaTokenAuthenticationFilter


##########
# Realms #
##########
# Login
kapuaUserPassAuthenticatingRealm = org.eclipse.kapua.service.authentication.shiro.realm.UserPassAuthenticatingRealm

# Session
kapuaAccessTokenAuthenticatingRealm = org.eclipse.kapua.service.authentication.shiro.realm.AccessTokenAuthenticatingRealm

# Authorization
kapuaAuthorizingRealm = org.eclipse.kapua.service.authorization.shiro.KapuaAuthorizingRealm

securityManager.realms = $kapuaAuthorizingRealm, $kapuaAccessTokenAuthenticatingRealm, $kapuaUserPassAuthenticatingRealm


#edcCacheManager = com.eurotech.cloud.commons.service.security.KapuaCacheManager
#securityManager.cacheManager = $edcCacheManager

# SessionListeners only works with in the native SessionMode
# This is not the mode we use when running in Tomcat.
#securityManager.sessionMode = native
securityManager.sessionManager.globalSessionTimeout = -1
securityManager.sessionManager.sessionValidationSchedulerEnabled = false

securityManager.subjectDAO.sessionStorageEvaluator.sessionStorageEnabled = false

[users]
# The 'users' section is for simple deployments
# when you only need a small number of statically-defined
# set of User accounts.

[roles]
# The 'roles' section is for simple deployments
# when you only need a small number of statically-defined
# roles.

[urls]
# The 'urls' section is used for url-based security
# in web applications.  We'll discuss this section in the
# Web documentation
